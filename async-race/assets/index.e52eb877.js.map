{"version":3,"file":"index.e52eb877.js","sources":["../../vite/modulepreload-polyfill","../../src/common/utils/safeQuerySelector.ts","../../src/common/utils/createElement.ts","../../src/common/utils/getPagination.ts","../../src/common/utils/randomFromArray.ts","../../src/common/utils/getRandomColor.ts","../../src/common/utils/animation.ts","../../src/common/urls.ts","../../src/common/api.ts","../../src/app/Controller.ts","../../src/app/InitialState.ts","../../src/app/Model.ts","../../src/components/Header/index.ts","../../src/components/Footer/index.ts","../../src/components/Main/index.ts","../../src/common/carSVG.ts","../../src/components/CarsContainer/CarWithEnvironment/index.ts","../../src/components/CarsContainer/index.ts","../../src/components/PageInformTitles/index.ts","../../src/components/Pagination/index.ts","../../src/components/CreateCarInput/index.ts","../../src/common/carsData.ts","../../src/components/GenerateCars/GenerateCars.ts","../../src/components/ResetCars/index.ts","../../src/components/Race/index.ts","../../src/components/Pages/Garage/index.ts","../../src/components/Pages/Winners/WinnersTable/index.ts","../../src/components/Pages/Winners/index.ts","../../src/components/ModalWindow/index.ts","../../src/app/View.ts","../../src/app/App.ts","../../src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","/**\n * Safely get a DOM element by selector\n * @param selector css selector like '.class'\n * @param parent (default - document) - DOM element\n * @return {element} DOM element like HTMLElement\n */\n\nexport default function safeQuerySelector<T extends Element>(\n  selector: string,\n  parent: Pick<Element, 'querySelector'> = document\n): T {\n  const element = parent.querySelector(selector)\n  if (!element) {\n    throw new Error(`Selector '${selector}' didn't match any elements.`)\n  }\n  return <T>element\n}\n","import { INewElement } from '../../types'\n\nexport default function createElement({ tagName, classes, attributes, text }: INewElement) {\n  const element = document.createElement(tagName)\n\n  if (classes) {\n    if (typeof classes === 'string') {\n      element.classList.add(classes)\n    } else {\n      element.classList.add(...classes)\n    }\n  }\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([key, value]) => {\n      element.setAttribute(key, value)\n    })\n  }\n\n  if (text) {\n    element.innerText = text\n  }\n\n  return element\n}\n","import { createElement } from './index'\n\ntype Pagination = {\n  type: 'Garage' | 'Winners'\n  page: number\n  carsCount: number\n  carsPerPage: number\n  handleClick: (type: 'Garage' | 'Winners', button: 'Prev' | 'Next') => void\n}\n\nexport default function getPagination({\n  type,\n  page,\n  carsCount,\n  carsPerPage,\n  handleClick,\n}: Pagination) {\n  const pagination = createElement({ tagName: 'div', classes: 'pagination' })\n  const pagesCount = Math.ceil(carsCount / carsPerPage)\n\n  const buttons = ['Prev', 'Next'].map((text) => {\n    const button = createElement({\n      tagName: 'button',\n      classes: ['btn', `pagination__${text}`],\n      text,\n    })\n\n    if (text === 'Prev') {\n      button.addEventListener('click', () => {\n        handleClick(type, 'Prev')\n      })\n      if (page === 1) {\n        button.setAttribute('disabled', 'true')\n      } else {\n        button.removeAttribute('disabled')\n      }\n    }\n\n    if (text === 'Next') {\n      button.addEventListener('click', () => {\n        handleClick(type, 'Next')\n      })\n      if (page === pagesCount) {\n        button.setAttribute('disabled', 'true')\n      } else {\n        button.removeAttribute('disabled')\n      }\n    }\n\n    return button\n  })\n\n  pagination.append(...buttons)\n\n  return pagination\n}\n","export default function randomFromArray(array: string[]) {\n  return array[Math.floor(Math.random() * (array.length + 1))]\n}\n","export default function getRandomColor() {\n  const letters = '0123456789ABCDEF'\n  let color = '#'\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)]\n  }\n  return color\n}\n","export default async function animation({\n  carId,\n  carImage,\n  time,\n  totalDistance,\n  driveCarCallback,\n}: {\n  carId: number\n  carImage: HTMLElement\n  time: number\n  totalDistance: number\n  driveCarCallback: (carId: number) => Promise<boolean>\n}) {\n  const start = performance.now()\n  let drive: boolean | null = null\n\n  requestAnimationFrame(function animate(timestamp) {\n    const timeFraction = (timestamp - start) / time\n    const distanceCovered = totalDistance * timeFraction\n    carImage.style.transform = `translateX(${Math.min(distanceCovered, totalDistance)}px)`\n    if (timeFraction < 1 && drive === null) {\n      requestAnimationFrame(animate)\n    }\n  })\n\n  const result: boolean = await driveCarCallback(carId).then((status) => {\n    drive = status\n    return status\n  })\n\n  if (!result) {\n    return Promise.reject(\n      new Error(`Car #${carId} has been stopped suddenly. It's engine was broken down.`)\n    )\n  }\n\n  return Promise.resolve({ carId, time })\n}\n","const BASE_URL = 'http://127.0.0.1:3000'\n\nexport const GARAGE_URL = `${BASE_URL}/garage`\nexport const WINNERS_URL = `${BASE_URL}/winners`\nexport const ENGINE_URL = `${BASE_URL}/engine`\n","import { ICar, IWinnersCar, TEngineStatus } from '../types'\nimport { ENGINE_URL, GARAGE_URL, WINNERS_URL } from './urls'\n\nconst MAX_CARS_PER_PAGE = 7\nconst MAX_WINNERS_PER_PAGE = 10\n\ntype getCarsQueryParam = {\n  page?: number\n  limit?: number\n}\n\nexport async function getCars({\n  page = 1,\n  limit = MAX_CARS_PER_PAGE,\n}: getCarsQueryParam = {}): Promise<{\n  items: ICar[] | []\n  page: number\n  count: number\n}> {\n  const resource = `${GARAGE_URL}?_page=${page}&_limit=${limit}`\n  const response = await fetch(resource)\n\n  const items = await response.json()\n  const count = +(response.headers.get('X-Total-Count') ?? 0)\n\n  return { items, page, count }\n}\n\nexport const getCar = async (id: number): Promise<ICar> =>\n  (await fetch(`${GARAGE_URL}/${id}`)).json()\n\ntype Sort = 'id' | 'wins' | 'time'\ntype Order = 'ASC' | 'DESC'\n\ntype getWinnersCarQueryParam = {\n  page?: number\n  limit?: number\n  sort?: Sort\n  order?: Order\n}\n\nexport const createCar = async (name: string, color: string = '#000000'): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    name,\n    color,\n  })\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n  }\n\n  const request = await fetch(GARAGE_URL, requestOptions)\n\n  return request.status\n}\n\nexport const fetchGenerateCar = async (\n  name: string,\n  color: string = '#000000'\n): Promise<Response> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    name,\n    color,\n  })\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n  }\n\n  return fetch(GARAGE_URL, requestOptions)\n}\n\nexport const updateCar = async (\n  id: number,\n  name: string,\n  color: string = '#000000'\n): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    name,\n    color,\n  })\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: raw,\n  }\n\n  const request = await fetch(`${GARAGE_URL}/${id}`, requestOptions)\n\n  return request.status\n}\n\nexport const deleteCar = async (id: number): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: myHeaders,\n  }\n\n  const request = await fetch(`${GARAGE_URL}/${id}`, requestOptions)\n\n  return request.status\n}\n\nexport const deleteWinner = async (id: number): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const requestOptions = {\n    method: 'DELETE',\n    headers: myHeaders,\n  }\n\n  const request = await fetch(`${WINNERS_URL}/${id}`, requestOptions)\n\n  return request.status\n}\n\nfunction getSortOrderQueryParam(sort?: Sort, order?: Order): string {\n  if (sort && order) {\n    return `&_sort=${sort}&_order=${order}`\n  }\n\n  return ''\n}\n\nexport async function getWinners({\n  page = 1,\n  limit = MAX_WINNERS_PER_PAGE,\n  sort = 'time',\n  order = 'ASC',\n}: getWinnersCarQueryParam = {}): Promise<{\n  items: (IWinnersCar & ICar)[] | []\n  page: number\n  count: number\n}> {\n  const resource = `${WINNERS_URL}?_page=${page}&_limit=${limit}${getSortOrderQueryParam(\n    sort,\n    order\n  )}`\n  const response = await fetch(resource)\n\n  const winnerItems: IWinnersCar[] | [] = await response.json()\n  const items: (IWinnersCar & ICar)[] | [] = await Promise.all(\n    winnerItems.map(async (winner) => ({ ...winner, ...(await getCar(winner.id)) }))\n  )\n  const count = +(response.headers.get('X-Total-Count') ?? 0)\n\n  return { items, page, count }\n}\n\nexport const getWinner = async (id: number): Promise<IWinnersCar> =>\n  (await fetch(`${WINNERS_URL}/${id}`)).json()\n\nexport async function startStopEngine(\n  id: number,\n  status: TEngineStatus\n): Promise<{ velocity: number; distance: number }> {\n  const requestOptions = {\n    method: 'PATCH',\n  }\n  const url = `${ENGINE_URL}?id=${id}&status=${status}`\n  const response = await fetch(url, requestOptions)\n\n  return response.json()\n}\n\nexport const createWinner = async ({ id, time, wins }: IWinnersCar): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    id,\n    time,\n    wins,\n  })\n\n  const requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n  }\n\n  const request = await fetch(WINNERS_URL, requestOptions)\n\n  return request.status\n}\n\nexport const updateWinner = async ({ id, time, wins }: IWinnersCar): Promise<number> => {\n  const myHeaders = new Headers()\n  myHeaders.append('Content-Type', 'application/json')\n\n  const raw = JSON.stringify({\n    time,\n    wins,\n  })\n\n  const requestOptions = {\n    method: 'PUT',\n    headers: myHeaders,\n    body: raw,\n  }\n\n  const request = await fetch(`${WINNERS_URL}/${id}`, requestOptions)\n\n  return request.status\n}\n\nexport async function driveEngine(carID: number): Promise<boolean> {\n  const requestOptions = {\n    method: 'PATCH',\n  }\n  const engineStatus = 'drive'\n  const url = `${ENGINE_URL}?id=${carID}&status=${engineStatus}`\n\n  return fetch(url, requestOptions)\n    .then((response) => response.json())\n    .then(() => {\n      return true\n    })\n    .catch(() => {\n      return false\n    })\n}\n","import Model from './Model'\nimport { animation, getRandomColor, randomFromArray, safeQuerySelector } from '../common/utils'\nimport { TSortBy } from '../types'\nimport {\n  createCar,\n  deleteCar,\n  deleteWinner,\n  fetchGenerateCar,\n  getCars,\n  getWinners,\n  updateCar,\n  startStopEngine,\n  driveEngine,\n  getWinner,\n  createWinner,\n  updateWinner,\n} from '../common/api'\n\nexport default class Controller {\n  public model: Model\n\n  constructor(model: Model) {\n    this.model = model\n  }\n\n  headerButtonClickHandler(currentView: 'Garage' | 'Winners') {\n    this.model.state = { ...this.model.state, currentView }\n    const mainGarageDOMLink = safeQuerySelector<HTMLElement>('.main__garage')\n    const mainWinnerDOMLink = safeQuerySelector<HTMLElement>('.main__winners')\n    const headerButtons = [mainGarageDOMLink, mainWinnerDOMLink]\n\n    headerButtons.forEach((button) => {\n      button.classList.toggle('d-none')\n    })\n\n    this.model.notifyObservers(['Header'])\n  }\n\n  handleWinnersOrder(sortBy: TSortBy) {\n    this.model.state.winners.sortOrder =\n      this.model.state.winners.sortOrder === 'ASC' ? 'DESC' : 'ASC'\n\n    getWinners({ sort: sortBy, order: this.model.state.winners.sortOrder }).then(\n      ({ items, count, page }) => {\n        this.model.state.winners.items = items\n        this.model.state.winners.count = count\n        this.model.state.winners.page = page\n        this.model.state.winners.sortBy = sortBy\n        this.model.notifyObservers(['Winners'])\n      }\n    )\n  }\n\n  handlePaginationClickButton(type: 'Garage' | 'Winners', button: 'Prev' | 'Next') {\n    const currentPage =\n      this.model.state.currentView === 'Garage' ? this.model.state.cars : this.model.state.winners\n    const page = button === 'Prev' ? currentPage.page - 1 : currentPage.page + 1\n\n    if (type === 'Garage') {\n      getCars({ page }).then(({ items, count }) => {\n        currentPage.items = items\n        currentPage.count = count\n        currentPage.page = page\n        this.model.notifyObservers([type])\n      })\n    }\n\n    if (type === 'Winners') {\n      getWinners({ page }).then(({ items, count }) => {\n        currentPage.items = items\n        currentPage.count = count\n        currentPage.page = page\n        this.model.notifyObservers([type])\n      })\n    }\n  }\n\n  handleCreateCar(type: 'create' | 'update', carName: string, carColor: string) {\n    const name = carName?.trim()\n\n    if (type === 'create' && name) {\n      createCar(name, carColor).then((status: number) => {\n        this.getCars(status, 201, 'error with creating Car')\n      })\n    }\n\n    if (type === 'update') {\n      this.handleUpdateCar()\n    }\n  }\n\n  handleUpdateCar() {\n    let carName: string = ''\n    let carColor: string = ''\n\n    const updateCarDOMLink = safeQuerySelector<HTMLElement>('.update-car')\n    const id = updateCarDOMLink.getAttribute('id')\n    const updateCarChildren = updateCarDOMLink.children\n\n    for (let i = 0; i < updateCarChildren.length; i += 1) {\n      const element = updateCarChildren[i]\n\n      if (element.className.includes('name')) {\n        carName = (element as HTMLInputElement).value\n      }\n      if (element.className.includes('color')) {\n        carColor = (element as HTMLInputElement).value\n      }\n    }\n\n    if (id && carName && carColor) {\n      updateCar(+id, carName, carColor).then((status: number) => {\n        this.getCars(status, 200, 'error with updating Car')\n      })\n    }\n  }\n\n  handleSelectCar(e: MouseEvent) {\n    const target = e.target as HTMLElement\n    const car: HTMLElement | null = target.closest('.car')\n\n    if (car) {\n      const id = car.getAttribute('id')\n      const carName = car.getAttribute('carName')\n      const color = car.getAttribute('color')\n\n      if (id && carName && color) {\n        const updateCarDOMLink = safeQuerySelector<HTMLElement>('.update-car')\n        updateCarDOMLink.setAttribute('id', id)\n        const updateCarChildren = updateCarDOMLink.children\n\n        for (let i = 0; i < updateCarChildren.length; i += 1) {\n          const element = updateCarChildren[i]\n          element.removeAttribute('disabled')\n          if (element.className.includes('name')) {\n            ;(element as HTMLInputElement).value = carName\n          }\n          if (element.className.includes('color')) {\n            ;(element as HTMLInputElement).value = color\n          }\n        }\n      }\n    }\n  }\n\n  handleRemoveCar(id: number) {\n    Promise.allSettled([deleteCar(id), deleteWinner(id)]).then((result) => {\n      if (result[0].status === 'fulfilled') {\n        this.getCars(result[0].value, 200, 'error with deleting Car')\n      }\n    })\n  }\n\n  getCars(statusFromServer: number, neededStatus: number, errorMessage: string) {\n    if (statusFromServer !== neededStatus) {\n      throw new Error(errorMessage)\n    }\n    Promise.all([getCars(), getWinners()]).then(([cars, winners]) => {\n      this.model.state.cars = cars\n      this.model.state.winners.items = winners.items\n      this.model.state.winners.page = winners.page\n      this.model.state.winners.count = winners.count\n\n      this.model.notifyObservers(['Garage', 'Winners'])\n    })\n  }\n\n  generateCars(carBrand: string[], carModel: string[]) {\n    const carName = () => `${randomFromArray(carBrand)} ${randomFromArray(carModel)}`\n    const RANDOM_CARS_COUNT = 100\n\n    const carToAdd: Promise<Response>[] = Array(RANDOM_CARS_COUNT)\n      .fill(1)\n      .map(() => fetchGenerateCar(carName(), getRandomColor()))\n\n    Promise.all(carToAdd)\n      .then(() => {\n        getCars().then((cars) => {\n          this.model.state.cars = cars\n          this.model.notifyObservers(['Garage'])\n        })\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  handleStartCar(\n    carImage: HTMLElement,\n    startButton: HTMLElement,\n    stopButton: HTMLElement,\n    carId: number\n  ) {\n    startButton.setAttribute('disabled', 'true')\n    stopButton.removeAttribute('disabled')\n\n    startStopEngine(carId, 'started').then(({ velocity, distance }) => {\n      const animationTime = distance / velocity\n      const flag = safeQuerySelector<HTMLElement>('.car__flag')\n      const startPoint = carImage.getBoundingClientRect().left\n      const finnishPoint = flag.getBoundingClientRect().right\n      const trackDistance = finnishPoint - startPoint\n\n      animation({\n        carId,\n        carImage,\n        time: animationTime,\n        totalDistance: trackDistance,\n        driveCarCallback: driveEngine,\n      })\n    })\n  }\n\n  handleStopCar(\n    carImage: HTMLElement,\n    startButton: HTMLElement,\n    stopButton: HTMLElement,\n    carId: number\n  ) {\n    startStopEngine(carId, 'stopped').then(() => {\n      carImage.style.transform = `translateX(0)`\n      startButton.removeAttribute('disabled')\n      stopButton.setAttribute('disabled', 'true')\n    })\n  }\n\n  async handleRace(raceButton: HTMLElement) {\n    raceButton.setAttribute('disabled', 'true')\n\n    const carsId = this.model.state.cars.items.map((item) => item.id)\n    const carEnableEnginePromises = carsId.map(async (carId) => {\n      const car = document.getElementById(String(carId))\n\n      if (!car) {\n        throw new Error(`Car ${carId} not found`)\n      }\n\n      const carImage = safeQuerySelector<HTMLElement>('.car__image', car)\n\n      const flag = safeQuerySelector<HTMLElement>('.car__flag')\n      const startPoint = carImage.getBoundingClientRect().left\n      const finnishPoint = flag.getBoundingClientRect().right\n      const trackDistance = finnishPoint - startPoint\n\n      const { velocity, distance } = await startStopEngine(carId, 'started')\n      const carTime = distance / velocity\n      return {\n        carId,\n        carImage,\n        carTime,\n        trackDistance,\n      }\n    })\n    const carsSettings = await Promise.all(carEnableEnginePromises)\n\n    const carsAnimation = carsSettings.map(({ carId, carImage, carTime, trackDistance }) =>\n      animation({\n        carId,\n        carImage,\n        time: carTime,\n        totalDistance: trackDistance,\n        driveCarCallback: driveEngine,\n      })\n    )\n\n    const fasterCar = await Promise.any(carsAnimation)\n\n    const resetButton = safeQuerySelector<HTMLElement>('.reset-button')\n    resetButton.removeAttribute('disabled')\n    const modalDOMLink = safeQuerySelector<HTMLElement>('.modal')\n    modalDOMLink.style.display = 'block'\n    const bestTime = (fasterCar.time / 1000).toFixed(2)\n    const winnerText = `Car #${fasterCar.carId} is won with best time = ${bestTime}s`\n    modalDOMLink.textContent = winnerText\n    setTimeout(() => {\n      modalDOMLink.style.display = 'none'\n    }, 10_000)\n\n    const hasWinner = await getWinner(fasterCar.carId)\n\n    if (!Object.keys(hasWinner).length) {\n      await createWinner({ id: fasterCar.carId, time: Number(bestTime), wins: 1 })\n    } else {\n      const fasterCarTimeSecond = +(fasterCar.time / 1000).toFixed(2)\n      const time = hasWinner.time >= fasterCarTimeSecond ? fasterCarTimeSecond : hasWinner.time\n      const wins = hasWinner.wins + 1\n      await updateWinner({ id: fasterCar.carId, time, wins })\n    }\n\n    const startButtons = document.querySelectorAll<HTMLElement>('.car__start')\n    startButtons.forEach((button) => {\n      button.setAttribute('disabled', 'true')\n    })\n    const stopButtons = document.querySelectorAll<HTMLElement>('.car__stop')\n    stopButtons.forEach((button) => {\n      button.removeAttribute('disabled')\n    })\n\n    const winners = await getWinners()\n    this.model.state.winners.items = winners.items\n    this.model.state.winners.count = winners.count\n    this.model.notifyObservers(['Winners'])\n  }\n\n  handleResetCars(resetButton: HTMLButtonElement) {\n    resetButton.setAttribute('disabled', 'true')\n    const modalDOMLink = safeQuerySelector<HTMLElement>('.modal')\n    modalDOMLink.style.display = 'none'\n    this.model.state.cars.items.forEach(({ id }) => {\n      startStopEngine(id, 'stopped').then(() => {\n        const carsImage = document.querySelectorAll<HTMLElement>('.car__image')\n        carsImage.forEach((carImage) => {\n          carImage.style.transform = `translateX(0)`\n        })\n        const startButtons = document.querySelectorAll<HTMLElement>('.car__start')\n        startButtons.forEach((button) => {\n          button.removeAttribute('disabled')\n        })\n        const stopButtons = document.querySelectorAll<HTMLElement>('.car__stop')\n        stopButtons.forEach((button) => {\n          button.setAttribute('disabled', 'true')\n        })\n        const raceButton = safeQuerySelector('.race-button')\n        raceButton.removeAttribute('disabled')\n      })\n    })\n  }\n}\n","import { getCars, getWinners } from '../common/api'\nimport { IState } from '../types'\n\nconst { items: carItems, page: carPage, count: carCount } = await getCars()\nconst { items: winnerItems, page: winnerPage, count: winnerCount } = await getWinners()\n\nexport const initState: IState = {\n  currentView: 'Garage',\n  cars: {\n    items: carItems,\n    page: carPage,\n    count: carCount,\n  },\n  winners: {\n    items: winnerItems,\n    page: winnerPage,\n    count: winnerCount,\n    sortBy: 'time',\n    sortOrder: 'ASC',\n  },\n}\n","import { IState, IObserver, IModel, TTypeNotifyObservers } from '../types'\nimport { initState } from './InitialState'\n\nexport default class Model implements IModel {\n  public state: IState\n  private observers: IObserver[]\n\n  constructor() {\n    this.state = initState\n    this.observers = []\n  }\n\n  registerObserver(observer: IObserver) {\n    const isExist = this.observers.includes(observer)\n    if (isExist) {\n      throw new Error('Observer already exist!')\n    }\n\n    this.observers.push(observer)\n  }\n\n  notifyObservers(type: TTypeNotifyObservers) {\n    if (!this.observers.length) {\n      throw new Error('The Model has no Observers to notify!')\n    }\n\n    this.observers.forEach((observer) => {\n      observer.update(type)\n    })\n  }\n}\n","import './_style.scss'\nimport { createElement, safeQuerySelector } from '../../common/utils'\nimport { IObserver, TTypeNotifyObservers } from '../../types'\nimport Controller from '../../app/Controller'\n\nconst BUTTONS_TITLE: ('Garage' | 'Winners')[] = ['Garage', 'Winners']\n\nexport default class Header implements IObserver {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  update(type: TTypeNotifyObservers): void {\n    if (type && type.length && !type.includes('All') && !type.includes('Header')) {\n      return\n    }\n\n    const headerDOMLink = safeQuerySelector<HTMLElement>('header')\n    headerDOMLink.innerHTML = ''\n    const wrapper = createElement({ tagName: 'div', classes: 'wrapper' })\n\n    BUTTONS_TITLE.forEach((currentView) => {\n      wrapper.append(this.createButton(currentView))\n    })\n\n    headerDOMLink.append(wrapper)\n\n    document.title = `Async race - ${this.controller.model.state.currentView}`\n  }\n\n  createButton(currentView: 'Garage' | 'Winners') {\n    const button = createElement({\n      tagName: 'button',\n      classes: ['btn'],\n      text: `To ${currentView}`,\n    })\n\n    if (this.controller.model.state.currentView === currentView) {\n      button.setAttribute('disabled', 'true')\n    }\n\n    button.addEventListener('click', () => {\n      this.controller.headerButtonClickHandler(currentView)\n    })\n\n    return button\n  }\n}\n","import './_style.scss'\nimport { createElement, safeQuerySelector } from '../../common/utils'\nimport { IComponent } from '../../types'\n\nexport default class Header implements IComponent {\n  render() {\n    const footerDOMLink = safeQuerySelector('footer')\n    const wrapper = createElement({ tagName: 'div', classes: 'wrapper' })\n\n    const template = `\n    <a href=\"https://github.com/PavelZabalotny\" class=\"footer__github github\" target=\"_blank\">\n      <span class=\"github__logo\"></span> <span class=\"github__name\">Pavel Zabalotny</span>\n    </a>\n    <div class=\"footer__year\">2022</div>\n    <a href=\"https://rs.school/js/\" class=\"footer__rs\" target=\"_blank\"></a>\n    `\n    wrapper.insertAdjacentHTML('beforeend', template)\n\n    footerDOMLink.append(wrapper)\n  }\n}\n","import './_style.scss'\nimport { createElement, safeQuerySelector } from '../../common/utils'\nimport { IObserver, TTypeNotifyObservers } from '../../types'\n// import Controller from '../../app/Controller'\n\nexport default class Main implements IObserver {\n  update(type: TTypeNotifyObservers): void {\n    if (type && type.length && !type.includes('All')) {\n      return\n    }\n\n    const mainDOMLink = safeQuerySelector<HTMLElement>('main')\n    const wrapper = createElement({ tagName: 'div', classes: 'wrapper' })\n\n    mainDOMLink.append(wrapper)\n  }\n}\n","export const carSVG = (color: string, width: number = 64) => `\n<?xml version=\"1.0\" standalone=\"no\"?>\n<!DOCTYPE svg >\n<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\n width=\"${width}\" height=\"${width / 2}\" viewBox=\"0 0 1280.000000 640.000000\"\n preserveAspectRatio=\"xMidYMid meet\">\n<g id=\"car-color\" transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\nfill=\"${color}\" stroke=\"none\">\n<path d=\"M3525 5341 c-72 -18 -79 -28 -90 -121 -4 -30 -11 -62 -16 -71 -4 -9\n-97 -51 -206 -94 -774 -304 -1348 -540 -1603 -661 -163 -77 -222 -91 -421\n-104 -85 -5 -170 -14 -189 -20 -101 -32 -362 -58 -620 -63 l-115 -2 -47 -80\nc-47 -78 -47 -80 -29 -100 34 -36 35 -77 5 -177 -30 -99 -34 -178 -19 -370 5\n-67 4 -88 -6 -88 -29 0 -83 -56 -110 -114 -50 -106 -74 -343 -48 -467 13 -58\n13 -62 3 -159 -5 -54 16 -238 28 -244 2 -1 29 -20 61 -41 73 -49 123 -103 132\n-143 17 -79 167 -155 355 -181 104 -15 969 -97 1087 -104 l32 -2 5 160 c7 230\n50 394 146 559 281 479 917 673 1405 429 316 -159 530 -424 598 -742 22 -106\n29 -365 13 -519 l-8 -82 3002 0 c2855 0 3002 1 2995 18 -33 87 -56 325 -45\n461 28 320 177 567 459 759 399 273 847 282 1243 24 239 -157 397 -392 460\n-687 18 -84 15 -341 -5 -430 -8 -38 -14 -71 -12 -73 7 -8 386 20 478 34 180\n28 253 65 304 152 24 41 28 57 28 127 -1 44 -9 117 -20 163 -18 79 -18 88 -2\n190 31 199 40 306 41 497 1 176 -1 195 -23 260 -46 135 -103 190 -283 274\n-222 104 -633 220 -1168 330 -523 108 -1524 210 -2054 211 l-229 0 -236 139\nc-813 477 -1593 884 -1852 966 -498 157 -1598 195 -2892 100 l-188 -14 -47 30\nc-92 58 -223 89 -297 70z m1912 -311 c13 -45 58 -305 88 -515 33 -226 74 -539\n71 -542 -7 -7 -1672 40 -2054 58 -357 16 -464 56 -573 215 -62 91 -87 225 -59\n326 12 40 56 74 192 148 369 198 799 289 1618 340 246 15 290 16 510 16 l194\n-1 13 -45z m649 10 c383 -36 717 -86 934 -139 210 -52 451 -163 720 -332 141\n-88 379 -259 380 -271 0 -5 -14 -8 -32 -8 -48 0 -114 -37 -140 -78 -24 -39\n-30 -113 -15 -189 l9 -43 -904 0 -904 0 -176 540 -175 540 47 0 c25 0 141 -9\n256 -20z\"/>\n<path d=\"M2617 3125 c-431 -82 -774 -440 -838 -875 -17 -117 -7 -292 24 -410\n113 -436 497 -751 947 -777 507 -29 959 313 1076 813 28 117 26 348 -4 467\n-94 378 -383 670 -760 768 -105 27 -336 34 -445 14z m378 -310 c84 -21 209\n-85 280 -142 116 -94 210 -242 251 -393 23 -87 24 -260 0 -355 -58 -237 -242\n-439 -473 -519 -531 -186 -1074 277 -969 828 30 152 94 274 206 386 111 110\n237 178 385 206 84 16 235 11 320 -11z\"/>\n<path d=\"M2918 2568 c2 -90 7 -167 12 -172 17 -17 108 58 201 166 l51 57 -48\n31 c-52 33 -131 65 -185 75 l-34 6 3 -163z\"/>\n<path d=\"M2591 2700 c-62 -22 -167 -82 -164 -94 3 -13 237 -216 249 -216 7 0\n15 7 18 16 8 20 8 127 -1 232 -7 95 -8 96 -102 62z\"/>\n<path d=\"M3209 2355 c-57 -64 -105 -123 -107 -131 -6 -25 46 -35 157 -29 58 3\n121 8 139 11 33 5 34 6 27 42 -7 44 -64 167 -92 201 l-19 24 -105 -118z\"/>\n<path d=\"M2260 2409 c-31 -44 -68 -133 -77 -186 l-6 -33 155 0 c165 0 201 9\n181 44 -13 24 -204 216 -214 216 -5 0 -22 -18 -39 -41z\"/>\n<path d=\"M2786 2354 c-36 -35 0 -87 44 -64 26 14 26 56 1 70 -25 13 -27 13\n-45 -6z\"/>\n<path d=\"M2751 2186 c-57 -32 -68 -111 -22 -157 43 -42 101 -43 143 -1 42 42\n41 100 -1 143 -33 32 -78 38 -120 15z\"/>\n<path d=\"M2560 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z\"/>\n<path d=\"M3002 2124 c-27 -19 -28 -36 -3 -58 25 -23 61 -6 61 29 0 33 -30 49\n-58 29z\"/>\n<path d=\"M2245 1993 c-77 -6 -76 -5 -59 -65 16 -55 61 -146 92 -186 l18 -23\n103 122 c57 67 104 129 105 138 1 14 -14 16 -104 17 -58 0 -127 -1 -155 -3z\"/>\n<path d=\"M3165 1981 c-44 -4 -61 -10 -63 -22 -3 -16 210 -229 228 -229 22 0\n86 141 105 228 l7 32 -109 -2 c-59 -1 -135 -4 -168 -7z\"/>\n<path d=\"M2776 1914 c-19 -18 -19 -20 -6 -45 6 -11 21 -19 35 -19 20 0 45 24\n45 44 0 10 -32 36 -45 36 -7 0 -21 -7 -29 -16z\"/>\n<path d=\"M2589 1743 c-86 -90 -139 -151 -139 -162 0 -25 179 -101 236 -101\nl27 0 -7 143 c-9 166 -13 187 -35 187 -9 0 -46 -30 -82 -67z\"/>\n<path d=\"M2936 1801 c-6 -10 -24 -168 -29 -258 -3 -60 -2 -63 19 -63 79 0 262\n68 248 92 -5 7 -53 64 -108 126 -93 105 -117 124 -130 103z\"/>\n<path d=\"M10723 3125 c-318 -58 -597 -266 -743 -555 -223 -441 -98 -996 289\n-1288 112 -84 188 -125 311 -166 274 -91 545 -70 802 61 552 282 735 983 392\n1500 -225 339 -651 521 -1051 448z m385 -315 c348 -98 579 -443 532 -796 -67\n-508 -596 -796 -1055 -574 -239 116 -396 352 -412 620 -20 335 192 640 516\n745 122 40 289 42 419 5z\"/>\n<path d=\"M11017 2568 c3 -90 9 -167 14 -172 13 -14 53 18 155 122 l95 97 -23\n18 c-50 40 -189 97 -235 97 -10 0 -11 -33 -6 -162z\"/>\n<path d=\"M10705 2706 c-50 -16 -133 -58 -163 -82 l-23 -19 121 -107 c67 -60\n128 -108 135 -108 23 0 27 39 20 186 -8 162 -4 157 -90 130z\"/>\n<path d=\"M11307 2354 c-59 -65 -107 -126 -107 -136 0 -11 11 -18 38 -22 44 -7\n278 7 289 17 15 16 -51 183 -94 236 l-19 24 -107 -119z\"/>\n<path d=\"M10362 2413 c-39 -62 -70 -134 -78 -184 l-7 -39 152 0 c86 0 161 5\n172 10 17 10 18 13 5 38 -8 15 -59 71 -114 125 l-99 99 -31 -49z\"/>\n<path d=\"M10888 2359 c-24 -14 -23 -56 2 -69 44 -23 80 29 44 64 -18 19 -23\n19 -46 5z\"/>\n<path d=\"M10851 2187 c-49 -29 -66 -101 -35 -146 9 -13 32 -29 50 -37 29 -12\n39 -12 68 0 99 41 85 180 -19 192 -24 3 -50 -1 -64 -9z\"/>\n<path d=\"M10660 2136 c-19 -23 -8 -61 18 -64 44 -7 67 32 36 62 -19 20 -38 20\n-54 2z\"/>\n<path d=\"M11096 2124 c-9 -8 -16 -22 -16 -29 0 -13 26 -45 36 -45 20 0 44 25\n44 45 0 14 -8 29 -19 35 -25 13 -27 13 -45 -6z\"/>\n<path d=\"M10335 1991 c-60 -6 -60 -6 -57 -36 9 -69 104 -248 122 -229 57 61\n210 250 207 258 -4 12 -176 17 -272 7z\"/>\n<path d=\"M11267 1983 c-68 -5 -79 -19 -47 -60 23 -31 200 -193 210 -193 3 0\n20 24 37 53 29 48 52 111 67 180 l6 27 -107 -2 c-60 -1 -134 -3 -166 -5z\"/>\n<path d=\"M10870 1910 c-16 -31 4 -62 38 -58 21 2 28 9 30 32 5 45 -47 65 -68\n26z\"/>\n<path d=\"M10651 1703 c-56 -59 -101 -113 -101 -120 0 -28 172 -103 237 -103\nl26 0 -7 123 c-10 179 -15 207 -36 207 -10 0 -63 -48 -119 -107z\"/>\n<path d=\"M11035 1801 c-7 -12 -23 -144 -29 -243 -4 -77 -4 -78 19 -78 45 0\n130 22 193 51 l64 29 -19 23 c-65 82 -198 227 -209 227 -7 0 -15 -4 -19 -9z\"/>\n</g>\n</svg>\n`\n","import './_style.scss'\nimport Controller from '../../../app/Controller'\nimport { ICar, IComponent } from '../../../types'\nimport { createElement } from '../../../common/utils'\nimport { carSVG } from '../../../common/carSVG'\n\nexport default class CarWithEnvironment implements IComponent {\n  element: ICar\n  controller: Controller\n\n  constructor(element: ICar, controller: Controller) {\n    this.element = element\n    this.controller = controller\n  }\n\n  render() {\n    const car = createElement({\n      tagName: 'div',\n      classes: 'car',\n      attributes: {\n        id: `${this.element.id}`,\n        color: `${this.element.color}`,\n        carName: `${this.element.name}`,\n      },\n    })\n\n    const carImage = createElement({\n      tagName: 'div',\n      classes: ['car__image'],\n      text: `${this.element.color}`,\n    })\n    carImage.innerHTML = carSVG(this.element.color)\n    const finnishFlag = createElement({ tagName: 'div', classes: 'car__flag' })\n    const carTrack = createElement({ tagName: 'div', classes: 'car__track' })\n    carTrack.append(carImage, finnishFlag)\n\n    const carChangeContainer = createElement({ tagName: 'div', classes: 'car__change' })\n\n    const carSelectButton = createElement({\n      tagName: 'button',\n      classes: ['bnt', 'btn__select'],\n      text: 'Select',\n    })\n    carSelectButton.addEventListener('click', (e) => {\n      this.controller.handleSelectCar(e)\n    })\n\n    const carRemoveButton = createElement({\n      tagName: 'button',\n      classes: ['bnt', 'btn__remove'],\n      text: 'Remove',\n    })\n    carRemoveButton.addEventListener('click', () => {\n      this.controller.handleRemoveCar(this.element.id)\n    })\n\n    const carName = createElement({ tagName: 'div', classes: 'car__name', text: this.element.name })\n\n    carChangeContainer.append(carSelectButton, carRemoveButton, carName)\n\n    const carRace = createElement({ tagName: 'div', classes: 'car__race' })\n    const carDriveButtons = createElement({ tagName: 'div', classes: 'car__drive-buttons' })\n\n    const carStopButton = createElement({\n      tagName: 'button',\n      classes: ['btn', 'car__stop'],\n      text: 'B',\n      attributes: { disabled: 'true' },\n    })\n\n    const carStartButton = createElement({\n      tagName: 'button',\n      classes: ['btn', 'car__start'],\n      text: 'A',\n    })\n    carStartButton.addEventListener('click', (e) => {\n      const target = e.target as HTMLButtonElement\n      this.controller.handleStartCar(carImage, target, carStopButton, this.element.id)\n    })\n    carStopButton.addEventListener('click', (e) => {\n      const target = e.target as HTMLButtonElement\n      this.controller.handleStopCar(carImage, carStartButton, target, this.element.id)\n    })\n\n    carDriveButtons.append(carStartButton, carStopButton)\n\n    carRace.append(carDriveButtons, carTrack)\n\n    car.append(carChangeContainer, carRace)\n\n    return car\n  }\n}\n","import IComponent from '../../types/IComponent'\nimport { createElement } from '../../common/utils'\nimport Controller from '../../app/Controller'\nimport CarWithEnvironment from './CarWithEnvironment'\n\nexport default class CarsContainer implements IComponent {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  render(): HTMLElement {\n    const carsContainer = createElement({ tagName: 'div', classes: 'main__cars' })\n\n    const cars = this.controller.model.state.cars.items.map((element) =>\n      new CarWithEnvironment(element, this.controller).render()\n    )\n\n    carsContainer.append(...cars)\n\n    return carsContainer\n  }\n}\n","import { createElement } from '../../common/utils'\n\nexport default class PageInformTitles {\n  pageView: 'Garage' | 'Winners'\n  carCount: number\n  pageNumber: number\n\n  constructor(page: 'Garage' | 'Winners', count: number, number: number) {\n    this.pageView = page\n    this.carCount = count\n    this.pageNumber = number\n  }\n\n  render() {\n    const pageTitleText = `${this.pageView} (${this.carCount})`\n    const pageNumberText = `Page #${this.pageNumber}`\n    const pageTitle = createElement({ tagName: 'h2', classes: 'pageTitle', text: pageTitleText })\n    const pageNumber = createElement({ tagName: 'h3', classes: 'pageNumber', text: pageNumberText })\n\n    const pageInformElements = createElement({ tagName: 'div', classes: 'main__inform-titles' })\n    pageInformElements.append(pageTitle, pageNumber)\n\n    return pageInformElements\n  }\n}\n","import './_style.scss'\nimport Controller from '../../app/Controller'\nimport { IComponent } from '../../types'\nimport { getPagination } from '../../common/utils'\n\nexport default class Pagination implements IComponent {\n  type: 'Garage' | 'Winners'\n  controller: Controller\n\n  constructor(type: 'Garage' | 'Winners', controller: Controller) {\n    this.type = type\n    this.controller = controller\n  }\n\n  render() {\n    const currentView = this.type === 'Garage' ? 'cars' : 'winners'\n    const {\n      model: {\n        state: {\n          [currentView]: { page, count },\n        },\n      },\n    } = this.controller\n\n    const MAX_CARS_PER_PAGE = this.type === 'Garage' ? 7 : 10\n\n    const pagination = getPagination({\n      type: this.type,\n      page,\n      carsCount: count,\n      carsPerPage: MAX_CARS_PER_PAGE,\n      handleClick: this.controller.handlePaginationClickButton.bind(this.controller),\n    })\n\n    return pagination\n  }\n}\n","import Controller from '../../app/Controller'\nimport { IComponent } from '../../types'\nimport { createElement } from '../../common/utils'\n\nexport default class CreateCarInput implements IComponent {\n  type: 'create' | 'update'\n  controller: Controller\n\n  constructor(type: 'create' | 'update', controller: Controller) {\n    this.type = type\n    this.controller = controller\n  }\n\n  render() {\n    let carColor: string\n    let carName: string\n\n    const containerClass = this.type === 'create' ? 'create-car' : 'update-car'\n\n    const container = createElement({ tagName: 'div', classes: containerClass })\n    const inputName = createElement({ tagName: 'input', classes: `${containerClass}__input-name` })\n    inputName.addEventListener('change', (e) => {\n      const target = e.target as HTMLInputElement\n      carName = target.value\n    })\n\n    const inputColor = createElement({\n      tagName: 'input',\n      classes: `${containerClass}__input-color`,\n      attributes: { type: 'color' },\n    })\n    inputColor.addEventListener('change', (e) => {\n      const target = e.target as HTMLInputElement\n      carColor = target.value\n    })\n\n    const button = createElement({\n      tagName: 'button',\n      classes: `${containerClass}__button`,\n      text: this.type.toUpperCase(),\n    })\n    button.addEventListener('click', () => {\n      this.controller.handleCreateCar(this.type, carName, carColor)\n    })\n\n    if (this.type === 'update') {\n      ;[inputName, inputColor, button].forEach((element) => {\n        element.setAttribute('disabled', 'true')\n      })\n    }\n\n    container.append(inputName, inputColor, button)\n\n    return container\n  }\n}\n","export const carBrand = [\n  'Acura',\n  'Alfa Romeo',\n  'Alpine',\n  'Apollo',\n  'Apple',\n  'Aston Martin',\n  'Audi',\n  'Automobili Pininfarina',\n  'Bentley',\n  'BMW',\n  'Bollinger',\n  'Brilliance',\n  'Bugatti',\n  'Buick',\n  'BYD',\n  'Cadillac',\n  'Chana',\n  'Chery',\n  'Chevrolet',\n  'Chrysler',\n  'Citroen',\n  'Continental',\n  'CUPRA',\n  'Dacia',\n  'Daewoo',\n  'Daihatsu',\n  'Datsun',\n  'Detroit Electric',\n  'Dodge',\n  'DS Automobiles',\n  'FAW',\n  'Ferrari',\n  'Fiat',\n  'Fisker',\n  'Ford',\n  'Foxtron',\n  'Geely',\n  'Genesis',\n  'GMC',\n  'Great Wall',\n  'Haval',\n  'Honda',\n  'Hummer',\n  'Hyundai',\n  'Ineos',\n  'Infiniti',\n  'Iran Khodro',\n  'JAC',\n  'Jaguar',\n  'Jeep',\n  'JETOUR',\n  'KIA',\n  'Koenigsegg',\n  'Lada',\n  'Lamborghini',\n  'Lancia',\n  'Land Rover',\n  'Lexus',\n  'Lifan',\n  'Lincoln',\n  'Lordstown',\n  'Lotus',\n  'Lucid',\n  'LvChi',\n  'Lynk & Co',\n  'Maserati',\n  'Maybach',\n  'Mazda',\n  'MCLaren',\n  'Mercedes-Benz',\n  'MG',\n  'MINI',\n  'Mitsubishi',\n  'Nikola',\n  'NIO',\n  'Nissan',\n  'Opel',\n  'Pagani',\n  'Peugeot',\n  'Polestar',\n  'Porsche',\n  'Qoros',\n  'Range Rover',\n  'Ravon',\n  'Renault',\n  'Rimac',\n  'Rivian',\n  'Rolls-Royce',\n  'Saab',\n  'Saipa',\n  'SEAT',\n  'Skoda',\n  'smart',\n  'SsangYong',\n  'SSC North America',\n  'Stellantis',\n  'Subaru',\n  'Suzuki',\n  'Tata',\n  'Tesla',\n  'Torsus',\n  'Toyota',\n  'VinFast',\n  'Volkswagen',\n  'Volvo',\n  'Xpeng',\n  'Zotye',\n]\n\nexport const carModel = [\n  'Durango',\n  'Ram',\n  'Challenger',\n  'Charger',\n  'Grand Caravan',\n  'X7',\n  'X5',\n  'X3',\n  'X6 M',\n  'X6',\n  'X1',\n  'X4',\n  'C3 Aircross',\n  'C5 Aircross',\n  'Duster',\n  'CR-V',\n  'Corolla',\n  'C4 Cactus',\n  'DS3 Crossback',\n  'C1',\n  'C3',\n  'Berlingo Multispace',\n  'DS4 Crossback',\n  'UX 250h',\n  'NX 300h',\n  'LC 500',\n  'RX 350/200t',\n  'Rapid',\n  'Largus',\n  'IS 200t',\n  'LS 500h',\n  'RX',\n  'ES 200/250/350',\n  'Hatchback',\n  'CX-5',\n  'Sedan',\n  'CX-30',\n  'CX-9',\n  'CX-3',\n  'MX-5 Roadster',\n  'Phantom',\n  'Camry',\n  'Polo',\n  'Cullinan',\n  'Ghost',\n  'Dawn',\n  'Duster',\n  'Arkana',\n  'Sandero',\n  'Logan',\n  'Trafic Fourgon',\n  'Logan MCV',\n  'Captur',\n  'Kadjar',\n  'RAV4',\n  'Rio',\n  'Creta',\n  'Solaris',\n]\n","import Controller from '../../app/Controller'\nimport { IComponent } from '../../types'\nimport { createElement } from '../../common/utils'\nimport { carBrand, carModel } from '../../common/carsData'\n\nexport default class GenerateCars implements IComponent {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  render() {\n    const generateButton = createElement({\n      tagName: 'button',\n      classes: ['btn', 'generate-button'],\n      text: 'GENERATE CARS',\n    })\n    generateButton.addEventListener('click', () => {\n      this.controller.generateCars(carBrand, carModel)\n    })\n\n    return generateButton\n  }\n}\n","import { IComponent } from '../../types'\nimport { createElement } from '../../common/utils'\nimport Controller from '../../app/Controller'\n\nexport default class ResetCars implements IComponent {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  render() {\n    const resetButton = createElement({\n      tagName: 'button',\n      classes: ['btn', 'reset-button'],\n      text: 'RESET',\n      attributes: { disabled: 'true' },\n    })\n    resetButton.addEventListener('click', (e) => {\n      const target = e.target as HTMLButtonElement\n      this.controller.handleResetCars(target)\n    })\n\n    return resetButton\n  }\n}\n","import { IComponent } from '../../types'\nimport { createElement } from '../../common/utils'\nimport Controller from '../../app/Controller'\n\nexport default class Race implements IComponent {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  render() {\n    const resetButton = createElement({\n      tagName: 'button',\n      classes: ['btn', 'race-button'],\n      text: 'RACE',\n    })\n    resetButton.addEventListener('click', (e) => {\n      const target = e.target as HTMLElement\n      this.controller.handleRace(target)\n    })\n\n    return resetButton\n  }\n}\n","import './_style.scss'\nimport Controller from '../../../app/Controller'\nimport { createElement, safeQuerySelector } from '../../../common/utils'\nimport { IObserver, TTypeNotifyObservers } from '../../../types'\nimport CarsContainer from '../../CarsContainer'\nimport PageInformTitles from '../../PageInformTitles'\nimport Pagination from '../../Pagination'\nimport CreateCarInput from '../../CreateCarInput'\nimport GenerateCars from '../../GenerateCars/GenerateCars'\nimport ResetCars from '../../ResetCars'\nimport Race from '../../Race'\n\nexport default class Garage implements IObserver {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  update(type: TTypeNotifyObservers) {\n    if (type && type.length && !type.includes('All') && !type.includes('Garage')) {\n      return\n    }\n    const mainDOMLink = safeQuerySelector<HTMLElement>('.main .wrapper')\n\n    const mainGarage: HTMLElement | null = mainDOMLink.querySelector('.main__garage')\n\n    if (mainGarage) {\n      mainGarage.remove()\n    }\n\n    const element = createElement({\n      tagName: 'div',\n      classes: 'main__garage',\n    })\n\n    const createCarInput = new CreateCarInput('create', this.controller).render()\n    const updateCarInput = new CreateCarInput('update', this.controller).render()\n\n    const garageInformTitles = new PageInformTitles(\n      'Garage',\n      this.controller.model.state.cars.count,\n      this.controller.model.state.cars.page\n    ).render()\n\n    const carsContainer = new CarsContainer(this.controller).render()\n\n    const garagePagination = new Pagination('Garage', this.controller).render()\n\n    const raceButton = new Race(this.controller).render()\n    const resetButton = new ResetCars(this.controller).render()\n    const generateButton = new GenerateCars(this.controller).render()\n\n    element.append(\n      createCarInput,\n      updateCarInput,\n      generateButton,\n      raceButton,\n      resetButton,\n      garageInformTitles,\n      carsContainer,\n      garagePagination\n    )\n\n    mainDOMLink.append(element)\n  }\n}\n","import './_style.scss'\nimport { IComponent } from '../../../../types'\nimport { createElement } from '../../../../common/utils'\nimport { carSVG } from '../../../../common/carSVG'\nimport Controller from '../../../../app/Controller'\n\nexport default class WinnersTable implements IComponent {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  render() {\n    const { items, sortBy, sortOrder, page } = this.controller.model.state.winners\n    const tableRowNames = ['Number', 'Car', 'Name', 'Wins', 'Best-time']\n\n    const rowNames = tableRowNames.map((text) => {\n      const element = createElement({\n        tagName: 'div',\n        classes: [`winners__${text.toLowerCase()}`, 'table__name'],\n        text,\n      })\n\n      if (text === 'Best-time') {\n        element.addEventListener('click', () => this.controller.handleWinnersOrder('time'))\n      }\n\n      if (text === 'Wins') {\n        element.addEventListener('click', () => this.controller.handleWinnersOrder('wins'))\n      }\n\n      const sortOrderArrow = sortOrder === 'ASC' ? '&#8595;' : '&#8593;'\n\n      switch (sortBy) {\n        case 'wins':\n          if (text === 'Wins') {\n            element.innerHTML = `${text} ${sortOrderArrow}`\n          }\n          break\n        case 'time':\n          if (text === 'Best-time') {\n            element.innerHTML = `${text} ${sortOrderArrow}`\n          }\n          break\n        default:\n          throw new Error('Sort condition not found in switch')\n      }\n\n      return element\n    })\n\n    const winnersCars = items\n      .map(({ name, wins, time, color }, index) => {\n        const carNumber = createElement({\n          tagName: 'div',\n          classes: ['table__cell'],\n          text: `${page * 10 - 9 + index}`,\n        })\n\n        const carImage = createElement({\n          tagName: 'div',\n          classes: ['table__cell', 'table__car'],\n          text: `${color}`,\n        })\n        carImage.innerHTML = carSVG(color)\n\n        const carName = createElement({\n          tagName: 'div',\n          classes: ['table__cell'],\n          text: name,\n        })\n\n        const carWins = createElement({\n          tagName: 'div',\n          classes: ['table__cell'],\n          text: `${wins}`,\n        })\n\n        const carTime = createElement({\n          tagName: 'div',\n          classes: ['table__cell'],\n          text: `${time}`,\n        })\n\n        return [carNumber, carImage, carName, carWins, carTime]\n      })\n      .flat()\n\n    const winnerTable = createElement({ tagName: 'div', classes: 'winners__table' })\n    winnerTable.append(...rowNames, ...winnersCars)\n\n    return winnerTable\n  }\n}\n","import './_style.scss'\nimport { createElement, safeQuerySelector } from '../../../common/utils'\nimport Controller from '../../../app/Controller'\nimport { IObserver, TTypeNotifyObservers } from '../../../types'\nimport PageInformTitles from '../../PageInformTitles'\nimport WinnersTable from './WinnersTable'\nimport Pagination from '../../Pagination'\n\nexport default class Winners implements IObserver {\n  controller: Controller\n\n  constructor(controller: Controller) {\n    this.controller = controller\n  }\n\n  update(type: TTypeNotifyObservers) {\n    if (type && type.length && !type.includes('All') && !type.includes('Winners')) {\n      return\n    }\n    const mainDOMLink = safeQuerySelector<HTMLElement>('.main .wrapper')\n    const mainWinners: HTMLElement | null = mainDOMLink.querySelector('.main__winners')\n\n    if (mainWinners) {\n      mainWinners.remove()\n    }\n\n    const winnersClasses =\n      this.controller.model.state.currentView === 'Garage'\n        ? ['main__winners', 'd-none']\n        : ['main__winners']\n\n    const element = createElement({\n      tagName: 'div',\n      classes: winnersClasses,\n    })\n\n    const garageInformTitles = new PageInformTitles(\n      'Winners',\n      this.controller.model.state.winners.count,\n      this.controller.model.state.winners.page\n    ).render()\n    const winnersPagination = new Pagination('Winners', this.controller).render()\n\n    const winnersTable = new WinnersTable(this.controller).render()\n    element.append(garageInformTitles, winnersTable, winnersPagination)\n\n    mainDOMLink.append(element)\n  }\n}\n","import './_style.scss'\nimport { IComponent } from '../../types'\nimport { createElement } from '../../common/utils'\n\nexport default class ModalWindow implements IComponent {\n  render() {\n    const modal = createElement({ tagName: 'div', classes: 'modal' })\n\n    return modal\n  }\n}\n","import Header from '../components/Header'\nimport { IComponent, IObserver, IView } from '../types'\nimport { createElement, safeQuerySelector } from '../common/utils'\nimport Controller from './Controller'\nimport Footer from '../components/Footer'\nimport Main from '../components/Main'\nimport Garage from '../components/Pages/Garage'\nimport Winners from '../components/Pages/Winners'\nimport ModalWindow from '../components/ModalWindow'\n\nexport default class View implements IView {\n  controller: Controller\n  observers: IObserver[]\n  bodyContainer: HTMLBodyElement\n  header: IObserver\n  garagePage: Garage\n  winnersPage: Winners\n  main: IObserver\n  footer: IComponent\n  modal: HTMLElement\n\n  constructor(controller: Controller) {\n    this.controller = controller\n    this.observers = []\n    this.bodyContainer = safeQuerySelector<HTMLBodyElement>('body')\n    this.header = new Header(controller)\n    this.garagePage = new Garage(this.controller)\n    this.winnersPage = new Winners(this.controller)\n    this.main = new Main()\n    this.footer = new Footer()\n    this.modal = new ModalWindow().render()\n  }\n\n  init() {\n    const baseElementsName = ['header', 'main', 'footer']\n    const baseElements = baseElementsName.map((elementName) =>\n      createElement({ tagName: elementName, classes: elementName })\n    )\n    this.bodyContainer.append(...baseElements)\n    this.bodyContainer.insertAdjacentElement('beforeend', this.modal)\n    this.footer.render()\n    const observers = [this.header, this.main, this.garagePage, this.winnersPage]\n    this.fillWithObservers(observers)\n    this.registerObservers()\n    this.controller.model.notifyObservers(['All'])\n  }\n\n  fillWithObservers(observers: IObserver[]) {\n    this.observers.push(...observers)\n  }\n\n  registerObservers(): void {\n    this.observers.forEach((observer) => {\n      this.controller.model.registerObserver(observer)\n    })\n  }\n}\n","import Controller from './Controller'\nimport Model from './Model'\nimport View from './View'\n\nexport default class App {\n  model: Model\n  controller: Controller\n  view: View\n\n  constructor() {\n    this.model = new Model()\n    this.controller = new Controller(this.model)\n    this.view = new View(this.controller)\n  }\n\n  init() {\n    this.view.init()\n  }\n}\n","import './_reset.scss'\nimport App from './app/App'\nimport './style.scss'\n\nconst app = new App()\napp.init()\n"],"names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","safeQuerySelector","selector","parent","element","createElement","tagName","classes","attributes","text","key","value","getPagination","type","page","carsCount","carsPerPage","handleClick","pagination","pagesCount","buttons","button","randomFromArray","array","getRandomColor","letters","color","i","animation","carId","carImage","time","totalDistance","driveCarCallback","start","drive","animate","timestamp","timeFraction","distanceCovered","status","BASE_URL","GARAGE_URL","WINNERS_URL","ENGINE_URL","MAX_CARS_PER_PAGE","MAX_WINNERS_PER_PAGE","getCars","limit","resource","response","items","count","getCar","id","createCar","name","myHeaders","raw","fetchGenerateCar","updateCar","requestOptions","deleteCar","deleteWinner","getSortOrderQueryParam","sort","order","getWinners","winnerItems","winner","getWinner","startStopEngine","url","createWinner","wins","updateWinner","driveEngine","carID","Controller","model","currentView","mainGarageDOMLink","mainWinnerDOMLink","sortBy","currentPage","carName","carColor","updateCarDOMLink","updateCarChildren","car","result","statusFromServer","neededStatus","errorMessage","cars","winners","carBrand","carModel","carToAdd","error","startButton","stopButton","velocity","distance","animationTime","flag","startPoint","trackDistance","raceButton","carEnableEnginePromises","item","carTime","carsAnimation","fasterCar","modalDOMLink","bestTime","winnerText","hasWinner","fasterCarTimeSecond","resetButton","carItems","carPage","carCount","winnerPage","winnerCount","initState","Model","observer","BUTTONS_TITLE","Header","controller","headerDOMLink","wrapper","footerDOMLink","template","Main","mainDOMLink","carSVG","width","CarWithEnvironment","finnishFlag","carTrack","carChangeContainer","carSelectButton","e","carRemoveButton","carRace","carDriveButtons","carStopButton","carStartButton","target","CarsContainer","carsContainer","PageInformTitles","number","pageTitleText","pageNumberText","pageTitle","pageNumber","pageInformElements","Pagination","CreateCarInput","containerClass","container","inputName","inputColor","GenerateCars","generateButton","ResetCars","Race","Garage","mainGarage","createCarInput","updateCarInput","garageInformTitles","garagePagination","WinnersTable","sortOrder","rowNames","sortOrderArrow","winnersCars","index","carNumber","carWins","winnerTable","Winners","mainWinners","winnersClasses","winnersPagination","winnersTable","ModalWindow","View","Footer","baseElements","elementName","observers","App","app"],"mappings":"AAAA,MAAMA,EAAI,UAAoB,CAC1B,MAAMC,EAAU,SAAS,cAAc,MAAM,EAAE,QAC/C,GAAIA,GAAWA,EAAQ,UAAYA,EAAQ,SAAS,eAAe,EAC/D,OAEJ,UAAWC,KAAQ,SAAS,iBAAiB,2BAA2B,EACpEC,EAAeD,CAAI,EAEvB,IAAI,iBAAkBE,GAAc,CAChC,UAAWC,KAAYD,EACnB,GAAIC,EAAS,OAAS,YAGtB,UAAWC,KAAQD,EAAS,WACpBC,EAAK,UAAY,QAAUA,EAAK,MAAQ,iBACxCH,EAAeG,CAAI,CAGvC,CAAK,EAAE,QAAQ,SAAU,CAAE,UAAW,GAAM,QAAS,EAAI,CAAE,EACvD,SAASC,EAAaC,EAAQ,CAC1B,MAAMC,EAAY,CAAA,EAClB,OAAID,EAAO,YACPC,EAAU,UAAYD,EAAO,WAC7BA,EAAO,iBACPC,EAAU,eAAiBD,EAAO,gBAClCA,EAAO,cAAgB,kBACvBC,EAAU,YAAc,UACnBD,EAAO,cAAgB,YAC5BC,EAAU,YAAc,OAExBA,EAAU,YAAc,cACrBA,CACV,CACD,SAASN,EAAeD,EAAM,CAC1B,GAAIA,EAAK,GAEL,OACJA,EAAK,GAAK,GAEV,MAAMO,EAAYF,EAAaL,CAAI,EACnC,MAAMA,EAAK,KAAMO,CAAS,CAC7B,CACL,EAAsBT,EAAG,ECnCD,SAAAU,EACtBC,EACAC,EAAyC,SACtC,CACG,MAAAC,EAAUD,EAAO,cAAcD,CAAQ,EAC7C,GAAI,CAACE,EACG,MAAA,IAAI,MAAM,aAAaF,+BAAsC,EAE3D,OAAAE,CACZ,CCdA,SAAwBC,EAAc,CAAE,QAAAC,EAAS,QAAAC,EAAS,WAAAC,EAAY,KAAAC,GAAqB,CACnF,MAAAL,EAAU,SAAS,cAAcE,CAAO,EAE9C,OAAIC,IACE,OAAOA,GAAY,SACbH,EAAA,UAAU,IAAIG,CAAO,EAErBH,EAAA,UAAU,IAAI,GAAGG,CAAO,GAIhCC,GACK,OAAA,QAAQA,CAAU,EAAE,QAAQ,CAAC,CAACE,EAAKC,CAAK,IAAM,CAC3CP,EAAA,aAAaM,EAAKC,CAAK,CAAA,CAChC,EAGCF,IACFL,EAAQ,UAAYK,GAGfL,CACT,CCdA,SAAwBQ,EAAc,CACpC,KAAAC,EACA,KAAAC,EACA,UAAAC,EACA,YAAAC,EACA,YAAAC,CACF,EAAe,CACb,MAAMC,EAAab,EAAc,CAAE,QAAS,MAAO,QAAS,aAAc,EACpEc,EAAa,KAAK,KAAKJ,EAAYC,CAAW,EAE9CI,EAAU,CAAC,OAAQ,MAAM,EAAE,IAAKX,GAAS,CAC7C,MAAMY,EAAShB,EAAc,CAC3B,QAAS,SACT,QAAS,CAAC,MAAO,eAAeI,GAAM,EACtC,KAAAA,CAAA,CACD,EAED,OAAIA,IAAS,SACJY,EAAA,iBAAiB,QAAS,IAAM,CACrCJ,EAAYJ,EAAM,MAAM,CAAA,CACzB,EACGC,IAAS,EACJO,EAAA,aAAa,WAAY,MAAM,EAEtCA,EAAO,gBAAgB,UAAU,GAIjCZ,IAAS,SACJY,EAAA,iBAAiB,QAAS,IAAM,CACrCJ,EAAYJ,EAAM,MAAM,CAAA,CACzB,EACGC,IAASK,EACJE,EAAA,aAAa,WAAY,MAAM,EAEtCA,EAAO,gBAAgB,UAAU,GAI9BA,CAAA,CACR,EAEU,OAAAH,EAAA,OAAO,GAAGE,CAAO,EAErBF,CACT,CCvDA,SAAwBI,EAAgBC,EAAiB,CAChD,OAAAA,EAAM,KAAK,MAAM,KAAK,UAAYA,EAAM,OAAS,EAAE,EAC5D,CCFA,SAAwBC,GAAiB,CACvC,MAAMC,EAAU,mBAChB,IAAIC,EAAQ,IACZ,QAASC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,GAASD,EAAQ,KAAK,MAAM,KAAK,SAAW,EAAE,GAEzC,OAAAC,CACT,CCPA,eAA8BE,EAAU,CACtC,MAAAC,EACA,SAAAC,EACA,KAAAC,EACA,cAAAC,EACA,iBAAAC,CACF,EAMG,CACK,MAAAC,EAAQ,YAAY,MAC1B,IAAIC,EAAwB,KAgB5B,OAdsB,sBAAA,SAASC,EAAQC,EAAW,CAC1C,MAAAC,GAAgBD,EAAYH,GAASH,EACrCQ,EAAkBP,EAAgBM,EACxCR,EAAS,MAAM,UAAY,cAAc,KAAK,IAAIS,EAAiBP,CAAa,OAC5EM,EAAe,GAAKH,IAAU,MAChC,sBAAsBC,CAAO,CAC/B,CACD,EAEuB,MAAMH,EAAiBJ,CAAK,EAAE,KAAMW,IAClDL,EAAAK,EACDA,EACR,EAQM,QAAQ,QAAQ,CAAE,MAAAX,EAAO,KAAAE,CAAM,CAAA,EAL7B,QAAQ,OACb,IAAI,MAAM,QAAQF,2DAA+D,CAAA,CAKvF,CCrCA,MAAMY,EAAW,wBAEJC,EAAa,GAAGD,WAChBE,EAAc,GAAGF,YACjBG,EAAa,GAAGH,WCDvBI,EAAoB,EACpBC,EAAuB,GAO7B,eAAsBC,EAAQ,CAC5B,KAAAjC,EAAO,EACP,MAAAkC,EAAQH,CACV,EAAuB,GAIpB,CACK,MAAAI,EAAW,GAAGP,WAAoB5B,YAAekC,IACjDE,EAAW,MAAM,MAAMD,CAAQ,EAE/BE,EAAQ,MAAMD,EAAS,OACvBE,EAAQ,EAAEF,EAAS,QAAQ,IAAI,eAAe,GAAK,GAElD,MAAA,CAAE,MAAAC,EAAO,KAAArC,EAAM,MAAAsC,EACxB,CAEa,MAAAC,EAAS,MAAOC,IAC1B,MAAM,MAAM,GAAGZ,KAAcY,GAAI,GAAG,KAAK,EAY/BC,EAAY,MAAOC,EAAc9B,EAAgB,YAA+B,CACrF,MAAA+B,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAE7C,MAAAC,EAAM,KAAK,UAAU,CACzB,KAAAF,EACA,MAAA9B,CAAA,CACD,EAUD,OAFgB,MAAM,MAAMgB,EANL,CACrB,OAAQ,OACR,QAASe,EACT,KAAMC,CAAA,CAG8C,GAEvC,MACjB,EAEaC,EAAmB,MAC9BH,EACA9B,EAAgB,YACM,CAChB,MAAA+B,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAE7C,MAAAC,EAAM,KAAK,UAAU,CACzB,KAAAF,EACA,MAAA9B,CAAA,CACD,EAQM,OAAA,MAAMgB,EANU,CACrB,OAAQ,OACR,QAASe,EACT,KAAMC,CAAA,CAG+B,CACzC,EAEaE,EAAY,MACvBN,EACAE,EACA9B,EAAgB,YACI,CACd,MAAA+B,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAE7C,MAAAC,EAAM,KAAK,UAAU,CACzB,KAAAF,EACA,MAAA9B,CAAA,CACD,EAEKmC,EAAiB,CACrB,OAAQ,MACR,QAASJ,EACT,KAAMC,CAAA,EAKR,OAFgB,MAAM,MAAM,GAAGhB,KAAcY,IAAMO,CAAc,GAElD,MACjB,EAEaC,EAAY,MAAOR,GAAgC,CACxD,MAAAG,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAEnD,MAAMI,EAAiB,CACrB,OAAQ,SACR,QAASJ,CAAA,EAKX,OAFgB,MAAM,MAAM,GAAGf,KAAcY,IAAMO,CAAc,GAElD,MACjB,EAEaE,EAAe,MAAOT,GAAgC,CAC3D,MAAAG,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAEnD,MAAMI,EAAiB,CACrB,OAAQ,SACR,QAASJ,CAAA,EAKX,OAFgB,MAAM,MAAM,GAAGd,KAAeW,IAAMO,CAAc,GAEnD,MACjB,EAEA,SAASG,EAAuBC,EAAaC,EAAuB,CAClE,OAAID,GAAQC,EACH,UAAUD,YAAeC,IAG3B,EACT,CAEA,eAAsBC,EAAW,CAC/B,KAAArD,EAAO,EACP,MAAAkC,EAAQF,EACR,KAAAmB,EAAO,OACP,MAAAC,EAAQ,KACV,EAA6B,GAI1B,CACD,MAAMjB,EAAW,GAAGN,WAAqB7B,YAAekC,IAAQgB,EAC9DC,EACAC,CACF,IACMhB,EAAW,MAAM,MAAMD,CAAQ,EAE/BmB,EAAkC,MAAMlB,EAAS,OACjDC,EAAqC,MAAM,QAAQ,IACvDiB,EAAY,IAAI,MAAOC,IAAY,CAAE,GAAGA,EAAQ,GAAI,MAAMhB,EAAOgB,EAAO,EAAE,CAAK,EAAA,CAAA,EAE3EjB,EAAQ,EAAEF,EAAS,QAAQ,IAAI,eAAe,GAAK,GAElD,MAAA,CAAE,MAAAC,EAAO,KAAArC,EAAM,MAAAsC,EACxB,CAEa,MAAAkB,EAAY,MAAOhB,IAC7B,MAAM,MAAM,GAAGX,KAAeW,GAAI,GAAG,KAAK,EAEvB,eAAAiB,EACpBjB,EACAd,EACiD,CACjD,MAAMqB,EAAiB,CACrB,OAAQ,OAAA,EAEJW,EAAM,GAAG5B,QAAiBU,YAAad,IAG7C,OAFiB,MAAM,MAAMgC,EAAKX,CAAc,GAEhC,MAClB,CAEO,MAAMY,EAAe,MAAO,CAAE,GAAAnB,EAAI,KAAAvB,EAAM,KAAA2C,KAAyC,CAChF,MAAAjB,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAE7C,MAAAC,EAAM,KAAK,UAAU,CACzB,GAAAJ,EACA,KAAAvB,EACA,KAAA2C,CAAA,CACD,EAUD,OAFgB,MAAM,MAAM/B,EANL,CACrB,OAAQ,OACR,QAASc,EACT,KAAMC,CAAA,CAG+C,GAExC,MACjB,EAEaiB,GAAe,MAAO,CAAE,GAAArB,EAAI,KAAAvB,EAAM,KAAA2C,KAAyC,CAChF,MAAAjB,EAAY,IAAI,QACZA,EAAA,OAAO,eAAgB,kBAAkB,EAE7C,MAAAC,EAAM,KAAK,UAAU,CACzB,KAAA3B,EACA,KAAA2C,CAAA,CACD,EAEKb,EAAiB,CACrB,OAAQ,MACR,QAASJ,EACT,KAAMC,CAAA,EAKR,OAFgB,MAAM,MAAM,GAAGf,KAAeW,IAAMO,CAAc,GAEnD,MACjB,EAEA,eAAsBe,EAAYC,EAAiC,CACjE,MAAMhB,EAAiB,CACrB,OAAQ,OAAA,EAGJW,EAAM,GAAG5B,QAAiBiC,iBAEhC,OAAO,MAAML,EAAKX,CAAc,EAC7B,KAAMX,GAAaA,EAAS,MAAM,EAClC,KAAK,IACG,EACR,EACA,MAAM,IACE,EACR,CACL,CC7NA,MAAqB4B,EAAW,CACvB,MAEP,YAAYC,EAAc,CACxB,KAAK,MAAQA,CACf,CAEA,yBAAyBC,EAAmC,CAC1D,KAAK,MAAM,MAAQ,CAAE,GAAG,KAAK,MAAM,MAAO,YAAAA,GACpC,MAAAC,EAAoBhF,EAA+B,eAAe,EAClEiF,EAAoBjF,EAA+B,gBAAgB,EACnD,CAACgF,EAAmBC,CAAiB,EAE7C,QAAS7D,GAAW,CACzBA,EAAA,UAAU,OAAO,QAAQ,CAAA,CACjC,EAED,KAAK,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CACvC,CAEA,mBAAmB8D,EAAiB,CAC7B,KAAA,MAAM,MAAM,QAAQ,UACvB,KAAK,MAAM,MAAM,QAAQ,YAAc,MAAQ,OAAS,MAE/ChB,EAAA,CAAE,KAAMgB,EAAQ,MAAO,KAAK,MAAM,MAAM,QAAQ,SAAU,CAAC,EAAE,KACtE,CAAC,CAAE,MAAAhC,EAAO,MAAAC,EAAO,KAAAtC,KAAW,CACrB,KAAA,MAAM,MAAM,QAAQ,MAAQqC,EAC5B,KAAA,MAAM,MAAM,QAAQ,MAAQC,EAC5B,KAAA,MAAM,MAAM,QAAQ,KAAOtC,EAC3B,KAAA,MAAM,MAAM,QAAQ,OAASqE,EAClC,KAAK,MAAM,gBAAgB,CAAC,SAAS,CAAC,CACxC,CAAA,CAEJ,CAEA,4BAA4BtE,EAA4BQ,EAAyB,CAC/E,MAAM+D,EACJ,KAAK,MAAM,MAAM,cAAgB,SAAW,KAAK,MAAM,MAAM,KAAO,KAAK,MAAM,MAAM,QACjFtE,EAAOO,IAAW,OAAS+D,EAAY,KAAO,EAAIA,EAAY,KAAO,EAEvEvE,IAAS,UACHkC,EAAA,CAAE,KAAAjC,EAAM,EAAE,KAAK,CAAC,CAAE,MAAAqC,EAAO,MAAAC,KAAY,CAC3CgC,EAAY,MAAQjC,EACpBiC,EAAY,MAAQhC,EACpBgC,EAAY,KAAOtE,EACnB,KAAK,MAAM,gBAAgB,CAACD,CAAI,CAAC,CAAA,CAClC,EAGCA,IAAS,WACAsD,EAAA,CAAE,KAAArD,EAAM,EAAE,KAAK,CAAC,CAAE,MAAAqC,EAAO,MAAAC,KAAY,CAC9CgC,EAAY,MAAQjC,EACpBiC,EAAY,MAAQhC,EACpBgC,EAAY,KAAOtE,EACnB,KAAK,MAAM,gBAAgB,CAACD,CAAI,CAAC,CAAA,CAClC,CAEL,CAEA,gBAAgBA,EAA2BwE,EAAiBC,EAAkB,CACtE,MAAA9B,EAAO6B,GAAS,OAElBxE,IAAS,UAAY2C,GACvBD,EAAUC,EAAM8B,CAAQ,EAAE,KAAM9C,GAAmB,CAC5C,KAAA,QAAQA,EAAQ,IAAK,yBAAyB,CAAA,CACpD,EAGC3B,IAAS,UACX,KAAK,gBAAgB,CAEzB,CAEA,iBAAkB,CAChB,IAAIwE,EAAkB,GAClBC,EAAmB,GAEjB,MAAAC,EAAmBtF,EAA+B,aAAa,EAC/DqD,EAAKiC,EAAiB,aAAa,IAAI,EACvCC,EAAoBD,EAAiB,SAE3C,QAAS5D,EAAI,EAAGA,EAAI6D,EAAkB,OAAQ7D,GAAK,EAAG,CACpD,MAAMvB,EAAUoF,EAAkB7D,GAE9BvB,EAAQ,UAAU,SAAS,MAAM,IACnCiF,EAAWjF,EAA6B,OAEtCA,EAAQ,UAAU,SAAS,OAAO,IACpCkF,EAAYlF,EAA6B,MAE7C,CAEIkD,GAAM+B,GAAWC,GACnB1B,EAAU,CAACN,EAAI+B,EAASC,CAAQ,EAAE,KAAM9C,GAAmB,CACpD,KAAA,QAAQA,EAAQ,IAAK,yBAAyB,CAAA,CACpD,CAEL,CAEA,gBAAgB,EAAe,CAEvB,MAAAiD,EADS,EAAE,OACsB,QAAQ,MAAM,EAErD,GAAIA,EAAK,CACD,MAAAnC,EAAKmC,EAAI,aAAa,IAAI,EAC1BJ,EAAUI,EAAI,aAAa,SAAS,EACpC/D,EAAQ+D,EAAI,aAAa,OAAO,EAElC,GAAAnC,GAAM+B,GAAW3D,EAAO,CACpB,MAAA6D,EAAmBtF,EAA+B,aAAa,EACpDsF,EAAA,aAAa,KAAMjC,CAAE,EACtC,MAAMkC,EAAoBD,EAAiB,SAE3C,QAAS5D,EAAI,EAAGA,EAAI6D,EAAkB,OAAQ7D,GAAK,EAAG,CACpD,MAAMvB,EAAUoF,EAAkB7D,GAClCvB,EAAQ,gBAAgB,UAAU,EAC9BA,EAAQ,UAAU,SAAS,MAAM,IACjCA,EAA6B,MAAQiF,GAErCjF,EAAQ,UAAU,SAAS,OAAO,IAClCA,EAA6B,MAAQsB,EAE3C,CACF,CACF,CACF,CAEA,gBAAgB4B,EAAY,CAC1B,QAAQ,WAAW,CAACQ,EAAUR,CAAE,EAAGS,EAAaT,CAAE,CAAC,CAAC,EAAE,KAAMoC,GAAW,CACjEA,EAAO,GAAG,SAAW,aACvB,KAAK,QAAQA,EAAO,GAAG,MAAO,IAAK,yBAAyB,CAC9D,CACD,CACH,CAEA,QAAQC,EAA0BC,EAAsBC,EAAsB,CAC5E,GAAIF,IAAqBC,EACjB,MAAA,IAAI,MAAMC,CAAY,EAE9B,QAAQ,IAAI,CAAC9C,EAAQ,EAAGoB,EAAW,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC2B,EAAMC,CAAO,IAAM,CAC1D,KAAA,MAAM,MAAM,KAAOD,EACxB,KAAK,MAAM,MAAM,QAAQ,MAAQC,EAAQ,MACzC,KAAK,MAAM,MAAM,QAAQ,KAAOA,EAAQ,KACxC,KAAK,MAAM,MAAM,QAAQ,MAAQA,EAAQ,MAEzC,KAAK,MAAM,gBAAgB,CAAC,SAAU,SAAS,CAAC,CAAA,CACjD,CACH,CAEA,aAAaC,EAAoBC,EAAoB,CACnD,MAAMZ,EAAU,IAAM,GAAG/D,EAAgB0E,CAAQ,KAAK1E,EAAgB2E,CAAQ,IAGxEC,EAAgC,MAAM,GAAiB,EAC1D,KAAK,CAAC,EACN,IAAI,IAAMvC,EAAiB0B,EAAW,EAAA7D,EAAA,CAAgB,CAAC,EAE1D,QAAQ,IAAI0E,CAAQ,EACjB,KAAK,IAAM,CACFnD,EAAA,EAAE,KAAM+C,GAAS,CAClB,KAAA,MAAM,MAAM,KAAOA,EACxB,KAAK,MAAM,gBAAgB,CAAC,QAAQ,CAAC,CAAA,CACtC,CAAA,CACF,EACA,MAAOK,GAAU,CAChB,QAAQ,IAAIA,CAAK,CAAA,CAClB,CACL,CAEA,eACErE,EACAsE,EACAC,EACAxE,EACA,CACYuE,EAAA,aAAa,WAAY,MAAM,EAC3CC,EAAW,gBAAgB,UAAU,EAErB9B,EAAA1C,EAAO,SAAS,EAAE,KAAK,CAAC,CAAE,SAAAyE,EAAU,SAAAC,KAAe,CACjE,MAAMC,EAAgBD,EAAWD,EAC3BG,EAAOxG,EAA+B,YAAY,EAClDyG,EAAa5E,EAAS,sBAAA,EAAwB,KAE9C6E,EADeF,EAAK,sBAAA,EAAwB,MACbC,EAE3B9E,EAAA,CACR,MAAAC,EACA,SAAAC,EACA,KAAM0E,EACN,cAAeG,EACf,iBAAkB/B,CAAA,CACnB,CAAA,CACF,CACH,CAEA,cACE9C,EACAsE,EACAC,EACAxE,EACA,CACA0C,EAAgB1C,EAAO,SAAS,EAAE,KAAK,IAAM,CAC3CC,EAAS,MAAM,UAAY,gBAC3BsE,EAAY,gBAAgB,UAAU,EAC3BC,EAAA,aAAa,WAAY,MAAM,CAAA,CAC3C,CACH,CAEA,MAAM,WAAWO,EAAyB,CAC7BA,EAAA,aAAa,WAAY,MAAM,EAG1C,MAAMC,EADS,KAAK,MAAM,MAAM,KAAK,MAAM,IAAKC,GAASA,EAAK,EAAE,EACzB,IAAI,MAAOjF,GAAU,CAC1D,MAAM4D,EAAM,SAAS,eAAe,OAAO5D,CAAK,CAAC,EAEjD,GAAI,CAAC4D,EACG,MAAA,IAAI,MAAM,OAAO5D,aAAiB,EAGpC,MAAAC,EAAW7B,EAA+B,cAAewF,CAAG,EAE5DgB,EAAOxG,EAA+B,YAAY,EAClDyG,EAAa5E,EAAS,sBAAA,EAAwB,KAE9C6E,EADeF,EAAK,sBAAA,EAAwB,MACbC,EAE/B,CAAE,SAAAJ,EAAU,SAAAC,GAAa,MAAMhC,EAAgB1C,EAAO,SAAS,EAC/DkF,EAAUR,EAAWD,EACpB,MAAA,CACL,MAAAzE,EACA,SAAAC,EACA,QAAAiF,EACA,cAAAJ,CAAA,CACF,CACD,EAGKK,GAFe,MAAM,QAAQ,IAAIH,CAAuB,GAE3B,IAAI,CAAC,CAAE,MAAAhF,EAAO,SAAAC,EAAU,QAAAiF,EAAS,cAAAJ,CAAA,IAClE/E,EAAU,CACR,MAAAC,EACA,SAAAC,EACA,KAAMiF,EACN,cAAeJ,EACf,iBAAkB/B,CAAA,CACnB,CAAA,EAGGqC,EAAY,MAAM,QAAQ,IAAID,CAAa,EAE7B/G,EAA+B,eAAe,EACtD,gBAAgB,UAAU,EAChC,MAAAiH,EAAejH,EAA+B,QAAQ,EAC5DiH,EAAa,MAAM,QAAU,QAC7B,MAAMC,GAAYF,EAAU,KAAO,KAAM,QAAQ,CAAC,EAC5CG,EAAa,QAAQH,EAAU,iCAAiCE,KACtED,EAAa,YAAcE,EAC3B,WAAW,IAAM,CACfF,EAAa,MAAM,QAAU,QAC5B,GAAM,EAET,MAAMG,EAAY,MAAM/C,EAAU2C,EAAU,KAAK,EAEjD,GAAI,CAAC,OAAO,KAAKI,CAAS,EAAE,OACpB,MAAA5C,EAAa,CAAE,GAAIwC,EAAU,MAAO,KAAM,OAAOE,CAAQ,EAAG,KAAM,CAAG,CAAA,MACtE,CACL,MAAMG,EAAsB,EAAEL,EAAU,KAAO,KAAM,QAAQ,CAAC,EACxDlF,EAAOsF,EAAU,MAAQC,EAAsBA,EAAsBD,EAAU,KAC/E3C,EAAO2C,EAAU,KAAO,EAC9B,MAAM1C,GAAa,CAAE,GAAIsC,EAAU,MAAO,KAAAlF,EAAM,KAAA2C,EAAM,CACxD,CAEqB,SAAS,iBAA8B,aAAa,EAC5D,QAASrD,GAAW,CACxBA,EAAA,aAAa,WAAY,MAAM,CAAA,CACvC,EACmB,SAAS,iBAA8B,YAAY,EAC3D,QAASA,GAAW,CAC9BA,EAAO,gBAAgB,UAAU,CAAA,CAClC,EAEK,MAAA0E,EAAU,MAAM5B,IACtB,KAAK,MAAM,MAAM,QAAQ,MAAQ4B,EAAQ,MACzC,KAAK,MAAM,MAAM,QAAQ,MAAQA,EAAQ,MACzC,KAAK,MAAM,gBAAgB,CAAC,SAAS,CAAC,CACxC,CAEA,gBAAgBwB,EAAgC,CAClCA,EAAA,aAAa,WAAY,MAAM,EACrC,MAAAL,EAAejH,EAA+B,QAAQ,EAC5DiH,EAAa,MAAM,QAAU,OACxB,KAAA,MAAM,MAAM,KAAK,MAAM,QAAQ,CAAC,CAAE,GAAA5D,KAAS,CAC9CiB,EAAgBjB,EAAI,SAAS,EAAE,KAAK,IAAM,CACtB,SAAS,iBAA8B,aAAa,EAC5D,QAASxB,GAAa,CAC9BA,EAAS,MAAM,UAAY,eAAA,CAC5B,EACoB,SAAS,iBAA8B,aAAa,EAC5D,QAAST,GAAW,CAC/BA,EAAO,gBAAgB,UAAU,CAAA,CAClC,EACmB,SAAS,iBAA8B,YAAY,EAC3D,QAASA,GAAW,CACvBA,EAAA,aAAa,WAAY,MAAM,CAAA,CACvC,EACkBpB,EAAkB,cAAc,EACxC,gBAAgB,UAAU,CAAA,CACtC,CAAA,CACF,CACH,CACF,CCpUA,KAAM,CAAE,MAAOuH,GAAU,KAAMC,GAAS,MAAOC,EAAA,EAAa,MAAM3E,IAC5D,CAAE,MAAOqB,GAAa,KAAMuD,GAAY,MAAOC,EAAA,EAAgB,MAAMzD,IAE9D0D,GAAoB,CAC/B,YAAa,SACb,KAAM,CACJ,MAAOL,GACP,KAAMC,GACN,MAAOC,EACT,EACA,QAAS,CACP,MAAOtD,GACP,KAAMuD,GACN,MAAOC,GACP,OAAQ,OACR,UAAW,KACb,CACF,ECjBA,MAAqBE,EAAwB,CACpC,MACC,UAER,aAAc,CACZ,KAAK,MAAQD,GACb,KAAK,UAAY,EACnB,CAEA,iBAAiBE,EAAqB,CAEpC,GADgB,KAAK,UAAU,SAASA,CAAQ,EAExC,MAAA,IAAI,MAAM,yBAAyB,EAGtC,KAAA,UAAU,KAAKA,CAAQ,CAC9B,CAEA,gBAAgBlH,EAA4B,CACtC,GAAA,CAAC,KAAK,UAAU,OACZ,MAAA,IAAI,MAAM,uCAAuC,EAGpD,KAAA,UAAU,QAASkH,GAAa,CACnCA,EAAS,OAAOlH,CAAI,CAAA,CACrB,CACH,CACF,CCzBA,MAAMmH,GAA0C,CAAC,SAAU,SAAS,EAEpE,MAAqBC,EAA4B,CAC/C,WAEA,YAAYC,EAAwB,CAClC,KAAK,WAAaA,CACpB,CAEA,OAAOrH,EAAkC,CACvC,GAAIA,GAAQA,EAAK,QAAU,CAACA,EAAK,SAAS,KAAK,GAAK,CAACA,EAAK,SAAS,QAAQ,EACzE,OAGI,MAAAsH,EAAgBlI,EAA+B,QAAQ,EAC7DkI,EAAc,UAAY,GAC1B,MAAMC,EAAU/H,EAAc,CAAE,QAAS,MAAO,QAAS,UAAW,EAEtD2H,GAAA,QAAShD,GAAgB,CACrCoD,EAAQ,OAAO,KAAK,aAAapD,CAAW,CAAC,CAAA,CAC9C,EAEDmD,EAAc,OAAOC,CAAO,EAE5B,SAAS,MAAQ,gBAAgB,KAAK,WAAW,MAAM,MAAM,aAC/D,CAEA,aAAapD,EAAmC,CAC9C,MAAM3D,EAAShB,EAAc,CAC3B,QAAS,SACT,QAAS,CAAC,KAAK,EACf,KAAM,MAAM2E,GAAA,CACb,EAED,OAAI,KAAK,WAAW,MAAM,MAAM,cAAgBA,GACvC3D,EAAA,aAAa,WAAY,MAAM,EAGjCA,EAAA,iBAAiB,QAAS,IAAM,CAChC,KAAA,WAAW,yBAAyB2D,CAAW,CAAA,CACrD,EAEM3D,CACT,CACF,CC7CA,MAAqB4G,EAA6B,CAChD,QAAS,CACD,MAAAI,EAAgBpI,EAAkB,QAAQ,EAC1CmI,EAAU/H,EAAc,CAAE,QAAS,MAAO,QAAS,UAAW,EAE9DiI,EAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOTF,EAAA,mBAAmB,YAAaE,CAAQ,EAEhDD,EAAc,OAAOD,CAAO,CAC9B,CACF,CCfA,MAAqBG,EAA0B,CAC7C,OAAO1H,EAAkC,CACvC,GAAIA,GAAQA,EAAK,QAAU,CAACA,EAAK,SAAS,KAAK,EAC7C,OAGI,MAAA2H,EAAcvI,EAA+B,MAAM,EACnDmI,EAAU/H,EAAc,CAAE,QAAS,MAAO,QAAS,UAAW,EAEpEmI,EAAY,OAAOJ,CAAO,CAC5B,CACF,CChBO,MAAMK,EAAS,CAAC/G,EAAegH,EAAgB,KAAO;AAAA;AAAA;AAAA;AAAA,UAInDA,cAAkBA,EAAQ;AAAA;AAAA;AAAA,QAG5BhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,ECDR,MAAqBiH,EAAyC,CAC5D,QACA,WAEA,YAAYvI,EAAe8H,EAAwB,CACjD,KAAK,QAAU9H,EACf,KAAK,WAAa8H,CACpB,CAEA,QAAS,CACP,MAAMzC,EAAMpF,EAAc,CACxB,QAAS,MACT,QAAS,MACT,WAAY,CACV,GAAI,GAAG,KAAK,QAAQ,KACpB,MAAO,GAAG,KAAK,QAAQ,QACvB,QAAS,GAAG,KAAK,QAAQ,MAC3B,CAAA,CACD,EAEKyB,EAAWzB,EAAc,CAC7B,QAAS,MACT,QAAS,CAAC,YAAY,EACtB,KAAM,GAAG,KAAK,QAAQ,OAAA,CACvB,EACDyB,EAAS,UAAY2G,EAAO,KAAK,QAAQ,KAAK,EAC9C,MAAMG,EAAcvI,EAAc,CAAE,QAAS,MAAO,QAAS,YAAa,EACpEwI,EAAWxI,EAAc,CAAE,QAAS,MAAO,QAAS,aAAc,EAC/DwI,EAAA,OAAO/G,EAAU8G,CAAW,EAErC,MAAME,EAAqBzI,EAAc,CAAE,QAAS,MAAO,QAAS,cAAe,EAE7E0I,EAAkB1I,EAAc,CACpC,QAAS,SACT,QAAS,CAAC,MAAO,aAAa,EAC9B,KAAM,QAAA,CACP,EACe0I,EAAA,iBAAiB,QAAUC,GAAM,CAC1C,KAAA,WAAW,gBAAgBA,CAAC,CAAA,CAClC,EAED,MAAMC,EAAkB5I,EAAc,CACpC,QAAS,SACT,QAAS,CAAC,MAAO,aAAa,EAC9B,KAAM,QAAA,CACP,EACe4I,EAAA,iBAAiB,QAAS,IAAM,CAC9C,KAAK,WAAW,gBAAgB,KAAK,QAAQ,EAAE,CAAA,CAChD,EAEK,MAAA5D,EAAUhF,EAAc,CAAE,QAAS,MAAO,QAAS,YAAa,KAAM,KAAK,QAAQ,IAAM,CAAA,EAE5EyI,EAAA,OAAOC,EAAiBE,EAAiB5D,CAAO,EAEnE,MAAM6D,EAAU7I,EAAc,CAAE,QAAS,MAAO,QAAS,YAAa,EAChE8I,EAAkB9I,EAAc,CAAE,QAAS,MAAO,QAAS,qBAAsB,EAEjF+I,EAAgB/I,EAAc,CAClC,QAAS,SACT,QAAS,CAAC,MAAO,WAAW,EAC5B,KAAM,IACN,WAAY,CAAE,SAAU,MAAO,CAAA,CAChC,EAEKgJ,EAAiBhJ,EAAc,CACnC,QAAS,SACT,QAAS,CAAC,MAAO,YAAY,EAC7B,KAAM,GAAA,CACP,EACc,OAAAgJ,EAAA,iBAAiB,QAAUL,GAAM,CAC9C,MAAMM,EAASN,EAAE,OACjB,KAAK,WAAW,eAAelH,EAAUwH,EAAQF,EAAe,KAAK,QAAQ,EAAE,CAAA,CAChF,EACaA,EAAA,iBAAiB,QAAUJ,GAAM,CAC7C,MAAMM,EAASN,EAAE,OACjB,KAAK,WAAW,cAAclH,EAAUuH,EAAgBC,EAAQ,KAAK,QAAQ,EAAE,CAAA,CAChF,EAEeH,EAAA,OAAOE,EAAgBD,CAAa,EAE5CF,EAAA,OAAOC,EAAiBN,CAAQ,EAEpCpD,EAAA,OAAOqD,EAAoBI,CAAO,EAE/BzD,CACT,CACF,CCvFA,MAAqB8D,EAAoC,CACvD,WAEA,YAAYrB,EAAwB,CAClC,KAAK,WAAaA,CACpB,CAEA,QAAsB,CACpB,MAAMsB,EAAgBnJ,EAAc,CAAE,QAAS,MAAO,QAAS,aAAc,EAEvEyF,EAAO,KAAK,WAAW,MAAM,MAAM,KAAK,MAAM,IAAK1F,GACvD,IAAIuI,GAAmBvI,EAAS,KAAK,UAAU,EAAE,OAAO,CAAA,EAG5C,OAAAoJ,EAAA,OAAO,GAAG1D,CAAI,EAErB0D,CACT,CACF,CCrBA,MAAqBC,CAAiB,CACpC,SACA,SACA,WAEA,YAAY3I,EAA4BsC,EAAesG,EAAgB,CACrE,KAAK,SAAW5I,EAChB,KAAK,SAAWsC,EAChB,KAAK,WAAasG,CACpB,CAEA,QAAS,CACP,MAAMC,EAAgB,GAAG,KAAK,aAAa,KAAK,YAC1CC,EAAiB,SAAS,KAAK,aAC/BC,EAAYxJ,EAAc,CAAE,QAAS,KAAM,QAAS,YAAa,KAAMsJ,CAAA,CAAe,EACtFG,EAAazJ,EAAc,CAAE,QAAS,KAAM,QAAS,aAAc,KAAMuJ,CAAA,CAAgB,EAEzFG,EAAqB1J,EAAc,CAAE,QAAS,MAAO,QAAS,sBAAuB,EACxE,OAAA0J,EAAA,OAAOF,EAAWC,CAAU,EAExCC,CACT,CACF,CCnBA,MAAqBC,CAAiC,CACpD,KACA,WAEA,YAAYnJ,EAA4BqH,EAAwB,CAC9D,KAAK,KAAOrH,EACZ,KAAK,WAAaqH,CACpB,CAEA,QAAS,CACP,MAAMlD,EAAc,KAAK,OAAS,SAAW,OAAS,UAChD,CACJ,MAAO,CACL,MAAO,EACJA,GAAc,CAAE,KAAAlE,EAAM,MAAAsC,CAAM,CAC/B,CACF,CAAA,EACE,KAAK,WAEHP,EAAoB,KAAK,OAAS,SAAW,EAAI,GAUhD,OARYjC,EAAc,CAC/B,KAAM,KAAK,KACX,KAAAE,EACA,UAAWsC,EACX,YAAaP,EACb,YAAa,KAAK,WAAW,4BAA4B,KAAK,KAAK,UAAU,CAAA,CAC9E,CAGH,CACF,CChCA,MAAqBoH,CAAqC,CACxD,KACA,WAEA,YAAYpJ,EAA2BqH,EAAwB,CAC7D,KAAK,KAAOrH,EACZ,KAAK,WAAaqH,CACpB,CAEA,QAAS,CACH,IAAA5C,EACAD,EAEJ,MAAM6E,EAAiB,KAAK,OAAS,SAAW,aAAe,aAEzDC,EAAY9J,EAAc,CAAE,QAAS,MAAO,QAAS6J,EAAgB,EACrEE,EAAY/J,EAAc,CAAE,QAAS,QAAS,QAAS,GAAG6J,gBAA8B,EACpFE,EAAA,iBAAiB,SAAWpB,GAAM,CAE1C3D,EADe2D,EAAE,OACA,KAAA,CAClB,EAED,MAAMqB,EAAahK,EAAc,CAC/B,QAAS,QACT,QAAS,GAAG6J,iBACZ,WAAY,CAAE,KAAM,OAAQ,CAAA,CAC7B,EACUG,EAAA,iBAAiB,SAAWrB,GAAM,CAE3C1D,EADe0D,EAAE,OACC,KAAA,CACnB,EAED,MAAM3H,EAAShB,EAAc,CAC3B,QAAS,SACT,QAAS,GAAG6J,YACZ,KAAM,KAAK,KAAK,YAAY,CAAA,CAC7B,EACM,OAAA7I,EAAA,iBAAiB,QAAS,IAAM,CACrC,KAAK,WAAW,gBAAgB,KAAK,KAAMgE,EAASC,CAAQ,CAAA,CAC7D,EAEG,KAAK,OAAS,UACf,CAAC8E,EAAWC,EAAYhJ,CAAM,EAAE,QAASjB,GAAY,CAC5CA,EAAA,aAAa,WAAY,MAAM,CAAA,CACxC,EAGO+J,EAAA,OAAOC,EAAWC,EAAYhJ,CAAM,EAEvC8I,CACT,CACF,CCvDO,MAAMnE,GAAW,CACtB,QACA,aACA,SACA,SACA,QACA,eACA,OACA,yBACA,UACA,MACA,YACA,aACA,UACA,QACA,MACA,WACA,QACA,QACA,YACA,WACA,UACA,cACA,QACA,QACA,SACA,WACA,SACA,mBACA,QACA,iBACA,MACA,UACA,OACA,SACA,OACA,UACA,QACA,UACA,MACA,aACA,QACA,QACA,SACA,UACA,QACA,WACA,cACA,MACA,SACA,OACA,SACA,MACA,aACA,OACA,cACA,SACA,aACA,QACA,QACA,UACA,YACA,QACA,QACA,QACA,YACA,WACA,UACA,QACA,UACA,gBACA,KACA,OACA,aACA,SACA,MACA,SACA,OACA,SACA,UACA,WACA,UACA,QACA,cACA,QACA,UACA,QACA,SACA,cACA,OACA,QACA,OACA,QACA,QACA,YACA,oBACA,aACA,SACA,SACA,OACA,QACA,SACA,SACA,UACA,aACA,QACA,QACA,OACF,EAEaC,GAAW,CACtB,UACA,MACA,aACA,UACA,gBACA,KACA,KACA,KACA,OACA,KACA,KACA,KACA,cACA,cACA,SACA,OACA,UACA,YACA,gBACA,KACA,KACA,sBACA,gBACA,UACA,UACA,SACA,cACA,QACA,SACA,UACA,UACA,KACA,iBACA,YACA,OACA,QACA,QACA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"}